"use strict";(self.webpackChunkdsd_project=self.webpackChunkdsd_project||[]).push([[3926],{8453:(n,i,e)=>{e.d(i,{R:()=>r,x:()=>l});var a=e(6540);const c={},s=a.createContext(c);function r(n){const i=a.useContext(s);return a.useMemo((function(){return"function"==typeof n?n(i):{...i,...n}}),[i,n])}function l(n){let i;return i=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:r(n.components),a.createElement(s.Provider,{value:i},n.children)}},9240:(n,i,e)=>{e.r(i),e.d(i,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>o});var a=e(4848),c=e(8453);const s={sidebar_label:"L\u1ecdc d\u1eef li\u1ec7u",sidebar_position:2},r="L\u1ecdc d\u1eef li\u1ec7u",l={id:"kungfupandas/SelectingAndFiltering/Filtering",title:"L\u1ecdc d\u1eef li\u1ec7u",description:"L\u1ecdc theo \u0111i\u1ec1u ki\u1ec7n",source:"@site/docs/kungfupandas/04-SelectingAndFiltering/02-Filtering.mdx",sourceDirName:"kungfupandas/04-SelectingAndFiltering",slug:"/kungfupandas/SelectingAndFiltering/Filtering",permalink:"/docs/kungfupandas/SelectingAndFiltering/Filtering",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"L\u1ecdc d\u1eef li\u1ec7u",sidebar_position:2},sidebar:"kungfupandasSidebar",previous:{title:"Ch\u1ecdn d\u1eef li\u1ec7u",permalink:"/docs/kungfupandas/SelectingAndFiltering/Select"},next:{title:"Ch\u01b0\u01a1ng 5: T\xednh to\xe1n d\u1eef li\u1ec7u tr\xean t\u1eebng ph\u1ea7n t\u1eeb",permalink:"/docs/kungfupandas/Loop/Introduction"}},d={},o=[{value:"L\u1ecdc theo \u0111i\u1ec1u ki\u1ec7n",id:"l\u1ecdc-theo-\u0111i\u1ec1u-ki\u1ec7n",level:2},{value:"To\xe1n t\u1eed \u0111i\u1ec1u ki\u1ec7n",id:"to\xe1n-t\u1eed-\u0111i\u1ec1u-ki\u1ec7n",level:3},{value:"<code>.isin()</code>",id:"isin",level:3},{value:"L\u1ecdc missing value v\u1edbi <code>.dropna()</code>",id:"l\u1ecdc-missing-value-v\u1edbi-dropna",level:3}];function t(n){const i={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.h1,{id:"l\u1ecdc-d\u1eef-li\u1ec7u",children:"L\u1ecdc d\u1eef li\u1ec7u"}),"\n",(0,a.jsx)(i.h2,{id:"l\u1ecdc-theo-\u0111i\u1ec1u-ki\u1ec7n",children:"L\u1ecdc theo \u0111i\u1ec1u ki\u1ec7n"}),"\n",(0,a.jsxs)(i.p,{children:["C\xe1c ph\u01b0\u01a1ng th\u1ee9c ",(0,a.jsx)(i.code,{children:"[]"}),", ",(0,a.jsx)(i.code,{children:".loc"})," hay ",(0,a.jsx)(i.code,{children:".iloc"})," ngo\xe0i vi\u1ec7c l\u1ea5y d\u1eef li\u1ec7u theo h\xe0ng v\xe0 c\u1ed9t c\xf2n c\xf3 th\u1ec3 l\u1ea5y ra nh\u1eefng b\u1ea3ng con theo c\xe1c \u0111i\u1ec1u ki\u1ec7n cho tr\u01b0\u1edbc. B\u1ea3n ch\u1ea5t c\xe1c c\xe2u \u0111i\u1ec1u ki\u1ec7n s\u1ebd tr\u1ea3 v\u1ec1 m\u1ed9t danh s\xe1ch d\u1ea1ng bolean v\xe0 c\xe1c h\xe0m tr\xean th\u1ef1c hi\u1ec7n l\u1ecdc theo danh s\xe1ch \u0111\xf3."]}),"\n",(0,a.jsxs)(i.p,{children:["Tr\u01b0\u1edbc h\u1ebft ta c\u1ea7n bi\u1ebft c\xe2u \u0111i\u1ec1u ki\u1ec7n trong Pandas nh\u01b0 th\u1ebf n\xe0o. V\xed d\u1ee5 ta c\xf3 1 ",(0,a.jsx)(i.code,{children:"DataFrame"})," nh\u01b0 sau"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"               state  individuals  family_members  state_pop\r\nregion                                                      \r\nMountain     Arizona       7259.0          2606.0    7158024\r\nMountain    Colorado       7607.0          3250.0    5691287\r\nMountain       Idaho       1297.0           715.0    1750536\r\nPacific       Alaska       1434.0           582.0     735139\r\nPacific   California     109008.0         20964.0   39461588\r\nPacific       Hawaii       4131.0          2399.0    1420593\n"})}),"\n",(0,a.jsx)(i.h3,{id:"to\xe1n-t\u1eed-\u0111i\u1ec1u-ki\u1ec7n",children:"To\xe1n t\u1eed \u0111i\u1ec1u ki\u1ec7n"}),"\n",(0,a.jsxs)(i.p,{children:["Gi\u1ea3 s\u1eed ta c\xf3 m\u1ed9t \u0111i\u1ec1u ki\u1ec7n r\u1eb1ng ",(0,a.jsx)(i.code,{children:"df['individuals'] > 5000"}),". K\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 l\xe0 1 ",(0,a.jsx)(i.code,{children:"Series"})]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"df['individuals'] > 5000\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"region\r\nMountain     True\r\nMountain     True\r\nMountain    False\r\nPacific     False\r\nPacific      True\r\nPacific     False\r\nName: individuals, dtype: bool\n"})})}),"\n",(0,a.jsx)(i.p,{children:"\u0110\u1ec3 l\u1ecdc theo \u0111i\u1ec1u ki\u1ec7n n\xe0y ta c\xf3 c\xe1c c\xe1ch nh\u01b0 sau"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"## D\xf9ng []\r\ndf[df['individuals'] > 5000]\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"               state  individuals  family_members  state_pop\r\nregion                                                      \r\nMountain     Arizona       7259.0          2606.0    7158024\r\nMountain    Colorado       7607.0          3250.0    5691287\r\nPacific   California     109008.0         20964.0   39461588\n"})})}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"## D\xf9ng .loc\r\ndf.loc[df['individuals'] > 5000]\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"               state  individuals  family_members  state_pop\r\nregion                                                      \r\nMountain     Arizona       7259.0          2606.0    7158024\r\nMountain    Colorado       7607.0          3250.0    5691287\r\nPacific   California     109008.0         20964.0   39461588\n"})})}),"\n",(0,a.jsx)(i.admonition,{title:"L\u01b0u \xfd",type:"note",children:(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:".iloc"})," kh\xf4ng nh\u1eadn ",(0,a.jsx)(i.code,{children:"Series"})," boolean nh\u01b0ng ",(0,a.jsx)(i.code,{children:"array"})," th\xec c\xf3 th\u1ec3. Do \u0111\xf3 ta c\xf3 th\u1ec3 d\xf9ng ",(0,a.jsx)(i.code,{children:".values"})," \u0111\u1ec3 l\u1ea5y k\u1ebft qu\u1ea3 c\u1ee7a C\xe2u \u0111i\u1ec1u ki\u1ec7n"]})}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"## D\xf9ng .iloc\r\ndf.iloc[(df['individuals'] > 5000).values]\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"               state  individuals  family_members  state_pop\r\nregion                                                      \r\nMountain     Arizona       7259.0          2606.0    7158024\r\nMountain    Colorado       7607.0          3250.0    5691287\r\nPacific   California     109008.0         20964.0   39461588\n"})})}),"\n",(0,a.jsxs)(i.p,{children:["Ta c\u0169ng c\xf3 th\u1ec3 \xe1p nhi\u1ec1u \u0111i\u1ec1u ki\u1ec7n c\xf9ng l\xfac, m\u1ed7i \u0111i\u1ec1u ki\u1ec7n ph\u1ea3i n\u1eb1m trong d\u1ea5u ngo\u1eb7c \u0111\u01a1n ",(0,a.jsx)(i.code,{children:"()"})," v\xe0 gi\u1eefa c\xe1c ki\u1ec1u ki\u1ec7n l\xe0 to\xe1n t\u1eed ",(0,a.jsx)(i.code,{children:"&"})," ho\u1eb7c ",(0,a.jsx)(i.code,{children:"|"})]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"## Nhi\u1ec1u c\xe2u \u0111i\u1ec1u ki\u1ec7n tr\xean m\u1ed9t c\u1ed9t\r\ndf.loc[(df['individuals'] > 5000) & (df['individuals'] < 10000)]\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"             state  individuals  family_members  state_pop\r\nregion                                                    \r\nMountain   Arizona       7259.0          2606.0    7158024\r\nMountain  Colorado       7607.0          3250.0    5691287\n"})})}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"## Nhi\u1ec1u c\xe2u \u0111i\u1ec1u ki\u1ec7n \u1edf nhi\u1ec1u c\u1ed9t\r\ndf.loc[(df['individuals'] > 5000) & (df['family_members'] < 10000)]\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"             state  individuals  family_members  state_pop\r\nregion                                                    \r\nMountain   Arizona       7259.0          2606.0    7158024\r\nMountain  Colorado       7607.0          3250.0    5691287\n"})})}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"## M\u1ed9t c\xe2u \u0111i\u1ec1u ki\u1ec7n tr\xean nhi\u1ec1u c\u1ed9t\r\ndf[df['individuals'] > 5 * df['family_members']]\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"              state  individuals  family_members  state_pop\r\nregion                                                     \r\nPacific  California     109008.0         20964.0   39461588\n"})})}),"\n",(0,a.jsx)(i.admonition,{title:"M\u1eb9o",type:"tip",children:(0,a.jsxs)(i.p,{children:["B\u1ea1n c\u0169ng c\xf3 th\u1ec3 d\xf9ng ",(0,a.jsx)(i.code,{children:"loc"})," \u0111\u1ec3 v\u1eeba l\u1ecdc c\xe1c d\xf2ng th\u1ecfa \u0111i\u1ec1u ki\u1ec7n, v\u1eeba ch\u1ecdn c\xe1c c\u1ed9t mu\u1ed1n l\u1ea5y"]})}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"df.loc[df['individuals'] > 5 * df['family_members'], ['individuals', 'family_members']]\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"         individuals  family_members\r\nregion                              \r\nPacific     109008.0         20964.0\n"})})}),"\n",(0,a.jsxs)(i.p,{children:["Ngo\xe0i ra, ",(0,a.jsx)(i.code,{children:"pandas"})," c\xf2n cho ph\xe9p b\u1ea1n l\u1ecdc v\u1edbi c\u1ea5u tr\xfac c\xe2u truy v\u1ea5n b\u1eb1ng ",(0,a.jsx)(i.code,{children:".query"})," theo c\xfa ph\xe1p"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"DataFrame.query(expr, inplace=False, **kwargs)\n"})}),"\n",(0,a.jsx)(i.p,{children:"Trong \u0111\xf3:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:"expr"}),": l\xe0 c\xe2u truy v\u1ea5n"]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:"inplace"}),": th\u1ef1c hi\u1ec7n tr\xean ch\xednh ",(0,a.jsx)(i.code,{children:"DataFrame"})," \u0111\xf3 hay t\u1ea1o 1 b\u1ea3ng sao"]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:"**kwargs"}),": keyword arguments"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(i.p,{children:["Theo v\xed d\u1ee5 tr\xean, \u0111\u1ec3 th\u1ef1c hi\u1ec7n l\u1ecdc theo \u0111i\u1ec1u ki\u1ec7n ",(0,a.jsx)(i.code,{children:"df['individuals'] > 5000"})," v\xe0 ",(0,a.jsx)(i.code,{children:"df['family_members'] < 10000"})," ta c\xf3 th\u1ec3 l\xe0m nh\u01b0 sau"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"df.query('individuals > 500 and family_members < 10000')\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"             state  individuals  family_members  state_pop\r\nregion                                                    \r\nMountain   Arizona       7259.0          2606.0    7158024\r\nMountain  Colorado       7607.0          3250.0    5691287\n"})})}),"\n",(0,a.jsx)(i.h3,{id:"isin",children:(0,a.jsx)(i.code,{children:".isin()"})}),"\n",(0,a.jsxs)(i.p,{children:["Ph\u01b0\u01a1ng th\u1ee9c ",(0,a.jsx)(i.code,{children:".isin(values)"})," \u0111\u1ec3 ki\u1ec3m tra c\xe1c ph\u1ea7n t\u1eed trong ",(0,a.jsx)(i.code,{children:"DataFrame"})," ho\u1eb7c ",(0,a.jsx)(i.code,{children:"Series"})," c\xf3 n\u1eb1m trong values hay kh\xf4ng."]}),"\n",(0,a.jsx)(i.p,{children:"V\xed d\u1ee5:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"df.isin(['Alaska', 'Oklahoma', 'Illinois', 'Arizona', 7259, 582, 300])\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"          state  individuals  family_members  state_pop\r\nregion                                                 \r\nMountain   True         True           False      False\r\nMountain  False        False           False      False\r\nMountain  False        False           False      False\r\nPacific    True        False            True      False\r\nPacific   False        False           False      False\r\nPacific   False        False           False      False\n"})})}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"df['state'].isin(['Alaska', 'Oklahoma', 'Illinois', 'Arizona'])\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"region\r\nMountain     True\r\nMountain    False\r\nMountain    False\r\nPacific      True\r\nPacific     False\r\nPacific     False\r\nName: state, dtype: bool\n"})})}),"\n",(0,a.jsxs)(i.p,{children:["Ngo\xe0i ra b\u1ea1n c\xf3 th\u1ec3 truy\u1ec1n ",(0,a.jsx)(i.code,{children:"values"})," l\xe0 m\u1ed9t ",(0,a.jsx)(i.code,{children:"dictionary"})," \u0111\u1ec3 ki\u1ec3m tra cho t\u1eebng c\u1ed9t theo t\u1eebng t\u1eadp gi\xe1 tr\u1ecb"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"df.isin({'state': ['Alaska', 'Oklahoma', 'Illinois', 'Arizona'], \r\n         'individuals': [7259, 582, 300]})\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"          state  individuals  family_members  state_pop\r\nregion                                                 \r\nMountain   True         True           False      False\r\nMountain  False        False           False      False\r\nMountain  False        False           False      False\r\nPacific    True        False           False      False\r\nPacific   False        False           False      False\r\nPacific   False        False           False      False\n"})})}),"\n",(0,a.jsxs)(i.p,{children:["L\u1ecdc v\u1edbi ",(0,a.jsx)(i.code,{children:".isin()"})]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"df[df['state'].isin(['Alaska', 'Oklahoma', 'Illinois', 'Arizona'])]\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"            state  individuals  family_members  state_pop\r\nregion                                                   \r\nMountain  Arizona       7259.0          2606.0    7158024\r\nPacific    Alaska       1434.0           582.0     735139\n"})})}),"\n",(0,a.jsxs)(i.p,{children:["trong tr\u01b0\u1eddng h\u1ee3p s\u1ef1 d\u1ee5ng ",(0,a.jsx)(i.code,{children:".isin"})," v\u1edbi ",(0,a.jsx)(i.code,{children:"DataFrame"}),", k\u1ebft qu\u1ea3 c\u1ee7a l\u1ecdc s\u1ebd tr\u1ea3 v\u1ec1 m\u1ed9t ",(0,a.jsx)(i.code,{children:"DataFrame"})," v\u1edbi  gi\xe1 tr\u1ecb c\xe1c ph\u1ea7n t\u1eed m\xe0 ph\xe9p ",(0,a.jsx)(i.code,{children:"isin"})," tr\u1ea3 v\u1ec1 ",(0,a.jsx)(i.code,{children:"True"}),", c\xe1c ph\u1ea7n t\u1eed c\xf2n l\u1ea1i tr\u1ea3 gi\xe1 tr\u1ecb ",(0,a.jsx)(i.code,{children:"NaN"})]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"df[df.isin(['Alaska', 'Oklahoma', 'Illinois', 'Arizona', 7259, 582, 300])]\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"            state  individuals  family_members  state_pop\r\nregion                                                   \r\nMountain  Arizona       7259.0             NaN        NaN\r\nMountain      NaN          NaN             NaN        NaN\r\nMountain      NaN          NaN             NaN        NaN\r\nPacific    Alaska          NaN           582.0        NaN\r\nPacific       NaN          NaN             NaN        NaN\r\nPacific       NaN          NaN             NaN        NaN\n"})})}),"\n",(0,a.jsx)(i.admonition,{title:"M\u1eb9o",type:"tip",children:(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:["B\u1ea1n c\xf3 d\xf9ng ",(0,a.jsx)(i.code,{children:".any()"})," \u0111\u1ec3 t\u1ed5ng h\u1ee3p \u0111i\u1ec1u ki\u1ec7n c\u1ee7a 1 DataFrame v\u1edbi c\xe1c ph\u1ea7n t\u1eed ",(0,a.jsx)(i.code,{children:"boolean"})]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:".any(axis=1)"})," : Ch\u1ec9 c\u1ea7n t\u1ed3n t\u1ea1i 1 c\u1ed9t gi\xe1 tr\u1ecb True, tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb True cho d\xf2ng"]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:".any(axis=0)"}),": Ch\u1ec9 c\u1ea7n t\u1ed3n t\u1ea1i 1 d\xf2ng c\xf3 gi\xe1 tr\u1ecb True, tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb True cho c\u1ed9t."]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:["Ph\u01b0\u01a1ng th\u1ee9c ",(0,a.jsx)(i.code,{children:".any()"})," th\u01b0\u1eddng d\xf9ng \u0111\u1ec3 ki\u1ec3m tra c\xe1c d\xf2ng t\u1ed3n t\u1ea1i 1 c\u1ed9t gi\xe1 tr\u1ecb ",(0,a.jsx)(i.code,{children:"NaN"})]}),"\n"]}),"\n"]})}),"\n",(0,a.jsxs)(i.p,{children:["L\u1ecdc v\u1edbi ",(0,a.jsx)(i.code,{children:".isin()"})," v\xe0 ",(0,a.jsx)(i.code,{children:"any(axis=1)"})]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"df.isin(['Alaska', 'Oklahoma', 'Illinois', 'Arizona', 7259, 582, 300]).any(axis=1)\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"region\r\nMountain     True\r\nMountain    False\r\nMountain    False\r\nPacific      True\r\nPacific     False\r\nPacific     False\r\ndtype: bool\n"})})}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"df[df.isin(['Alaska', 'Oklahoma', 'Illinois', 'Arizona', 7259, 582, 300]).any(axis=1)]\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"            state  individuals  family_members  state_pop\r\nregion                                                   \r\nMountain  Arizona       7259.0          2606.0    7158024\r\nPacific    Alaska       1434.0           582.0     735139\n"})})}),"\n",(0,a.jsxs)(i.p,{children:["L\u1ecdc v\u1edbi ",(0,a.jsx)(i.code,{children:"isin()"})," v\xe0 ",(0,a.jsx)(i.code,{children:"any(axis=0)"})]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"df.isin(['Alaska', 'Oklahoma', 'Illinois', 'Arizona', 7259, 582, 300]).any(axis=0)\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"state              True\r\nindividuals        True\r\nfamily_members     True\r\nstate_pop         False\r\ndtype: bool\n"})})}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"df.loc[:,df.isin(['Alaska', 'Oklahoma', 'Illinois', 'Arizona', 7259, 582, 300]).any(axis=0)]\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"               state  individuals  family_members\r\nregion                                           \r\nMountain     Arizona       7259.0          2606.0\r\nMountain    Colorado       7607.0          3250.0\r\nMountain       Idaho       1297.0           715.0\r\nPacific       Alaska       1434.0           582.0\r\nPacific   California     109008.0         20964.0\r\nPacific       Hawaii       4131.0          2399.0\n"})})}),"\n",(0,a.jsxs)(i.p,{children:["L\u1ecdc v\u1edbi ",(0,a.jsx)(i.code,{children:"isin()"})," v\xe0 ",(0,a.jsx)(i.code,{children:"any(axis=0)"})," v\xe0 ",(0,a.jsx)(i.code,{children:"any(axis=1)"})]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"bool_df = df.isin(['Alaska', 'Oklahoma', 'Illinois', 'Arizona', 7259, 582, 300])\r\ndf.loc[bool_df.any(axis=1), bool_df.any(axis=0)]\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"            state  individuals  family_members\r\nregion                                        \r\nMountain  Arizona       7259.0          2606.0\r\nPacific    Alaska       1434.0           582.0\n"})})}),"\n",(0,a.jsxs)(i.h3,{id:"l\u1ecdc-missing-value-v\u1edbi-dropna",children:["L\u1ecdc missing value v\u1edbi ",(0,a.jsx)(i.code,{children:".dropna()"})]}),"\n",(0,a.jsxs)(i.p,{children:["Trong qu\xe1 tr\xecnh x\u1eed l\xfd d\u1eef li\u1ec7u, ch\xfang ta th\u01b0\u1eddng g\u1eb7p nh\u1eefng b\u1ea3ng c\xf3 ch\u1ee9a gi\xe1 tr\u1ecb missing value. V\xed d\u1ee5 b\u1ea3ng ",(0,a.jsx)(i.code,{children:"missing_df"})]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"               state  individuals  family_members   state_pop\r\nregion                                                       \r\nMountain     Arizona       7259.0             NaN         NaN\r\nMountain    Colorado          NaN          3250.0   5691287.0\r\nMountain       Idaho       1297.0           715.0   1750536.0\r\nPacific       Alaska       1434.0             NaN    735139.0\r\nPacific   California     109008.0         20964.0  39461588.0\r\nPacific       Hawaii       4131.0          2399.0         NaN\n"})}),"\n",(0,a.jsxs)(i.p,{children:["\u0110\u1ec3 l\u1ecdc d\u1eef li\u1ec7u ch\u1ee9a ",(0,a.jsx)(i.code,{children:"NaN"})," ta d\xf9ng ph\u01b0\u01a1ng th\u1ee9c ",(0,a.jsx)(i.code,{children:".dropna()"})]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"DataFrame.dropna(axis=0, how='any', thresh=None, subset=None, inplace=False)\n"})}),"\n",(0,a.jsx)(i.p,{children:"Trong \u0111\xf3:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:"axis"}),": Nh\u1eadn di\u1ec7n l\u1ecdc theo d\xf2ng ",(0,a.jsx)(i.code,{children:"0"}),", ",(0,a.jsx)(i.code,{children:"index"}),", hay c\u1ed9t ",(0,a.jsx)(i.code,{children:"1"}),", ",(0,a.jsx)(i.code,{children:"column"})]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:"how"}),": Ch\u1ec9 \u0111\u1ecbnh c\xe1ch l\u1ecdc"]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"any"}),": N\u1ebfu c\xf3 b\u1ea5t k\xec ",(0,a.jsx)(i.code,{children:"NA"}),", lo\u1ea1i b\u1ecf d\xf2ng ho\u1eb7c c\u1ed9t"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"all"}),": N\u1ebfu t\u1ea5t c\u1ea3 l\xe0 ",(0,a.jsx)(i.code,{children:"NA"}),", lo\u1ea1i b\u1ecf d\xf2ng ho\u1eb7c c\u1ed9t"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:"thresh"}),": S\u1ed1 l\u01b0\u1ee3ng ",(0,a.jsx)(i.code,{children:"non-NA"})," y\xeau c\u1ea7u"]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:"subset"}),": Ch\u1ec9 \u0111\u1ecbnh c\xe1c c\u1ed9t c\u1ea7n l\u1ecdc"]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:"inplace"}),": Th\u1ef1c hi\u1ec7n tr\xean ch\xednh ",(0,a.jsx)(i.code,{children:"DataFrame"})," hay t\u1ea1o b\u1ea3n sao."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(i.p,{children:["L\u1ecdc b\u1ecf c\xe1c h\xe0ng n\u1ebfu \xedt nh\u1ea5t m\u1ed9t ph\u1ea7n t\u1eed ",(0,a.jsx)(i.code,{children:"NA"})]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"missing_df.dropna(axis=0)\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"               state  individuals  family_members   state_pop\r\nregion                                                       \r\nMountain       Idaho       1297.0           715.0   1750536.0\r\nPacific   California     109008.0         20964.0  39461588.0\n"})})}),"\n",(0,a.jsxs)(i.p,{children:["L\u1ecdc b\u1ecf c\xe1c c\u1ed9t n\u1ebfu \xedt nh\u1ea5t m\u1ed9t ph\u1ea7n t\u1eed ",(0,a.jsx)(i.code,{children:"NA"})]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"missing_df.dropna(axis='columns')\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"               state\r\nregion              \r\nMountain     Arizona\r\nMountain    Colorado\r\nMountain       Idaho\r\nPacific       Alaska\r\nPacific   California\r\nPacific       Hawaii\n"})})}),"\n",(0,a.jsxs)(i.p,{children:["L\u1ecdc b\u1ecf c\xe1c d\xf2ng n\u1ebfu t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed trong c\xe1c c\u1ed9t ",(0,a.jsx)(i.code,{children:"['family_members', 'state_pop']"})," l\xe0 ",(0,a.jsx)(i.code,{children:"NA"})]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"missing_df.dropna(axis='index', how='all', subset=['family_members', 'state_pop'])\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"               state  individuals  family_members   state_pop\r\nregion                                                       \r\nMountain    Colorado          NaN          3250.0   5691287.0\r\nMountain       Idaho       1297.0           715.0   1750536.0\r\nPacific       Alaska       1434.0             NaN    735139.0\r\nPacific   California     109008.0         20964.0  39461588.0\r\nPacific       Hawaii       4131.0          2399.0         NaN\n"})})}),"\n",(0,a.jsxs)(i.p,{children:["Gi\u1eef l\u1ea1i c\xe1c d\xf2ng c\xf3 \xedt nh\u1ea5t ",(0,a.jsx)(i.code,{children:"3"})," ph\u1ea7n t\u1eed ",(0,a.jsx)(i.code,{children:"non-NA"})]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-python",children:"missing_df.dropna(thresh=3)\n"})}),"\n",(0,a.jsx)("pythonoutput",{children:(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"               state  individuals  family_members   state_pop\r\nregion                                                       \r\nMountain    Colorado          NaN          3250.0   5691287.0\r\nMountain       Idaho       1297.0           715.0   1750536.0\r\nPacific       Alaska       1434.0             NaN    735139.0\r\nPacific   California     109008.0         20964.0  39461588.0\r\nPacific       Hawaii       4131.0          2399.0         NaN\n"})})})]})}function h(n={}){const{wrapper:i}={...(0,c.R)(),...n.components};return i?(0,a.jsx)(i,{...n,children:(0,a.jsx)(t,{...n})}):t(n)}}}]);